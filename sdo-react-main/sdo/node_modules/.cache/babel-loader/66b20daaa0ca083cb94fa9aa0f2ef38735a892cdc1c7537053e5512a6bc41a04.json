{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polly\\\\Online-laboratory-testing-system\\\\sdo-react-main\\\\sdo\\\\src\\\\pages\\\\LabaStud\\\\Button.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n\n// // Стили для формы и элементов\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 45px;\n// `;\n\n// const Button = styled.button`\n//   width: 1098px;\n//   height: 75px;\n//   background-color: ${({ disabled }) => (disabled ? '#ccc' : '#FFFFFF')};\n//   color: ${({ disabled }) => (disabled ? '#999' : '#000')};\n//   cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n//   border-radius: 10px;\n//   border-style: none;\n//   font-family: 'Montserrat';\n//   font-size: 16px;\n//   margin-bottom: 20px;\n//   transition: background-color 0.3s;\n\n//   &:hover {\n//     background-color: ${({ disabled }) => (disabled ? '#ccc' : '#E2EDD0')};\n//   }\n// `;\n\n// const Inpt = styled.input`\n//   display: none;\n// `;\n\n// const Label = styled.label`\n//   border: 2px dashed #000;\n//   height: 250px;\n//   text-align: center;\n//   border-radius: 7px;\n//   margin-top: 10px;\n//   width: 1098px;\n//   transition: background-color 0.3s;\n//   background-color: #FFFFFF;\n\n//   &:hover {\n//     background-color: #E2EDD08C;\n//   }\n// `;\n\n// const Span = styled.span`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   width: 100%;\n//   height: 100%;\n//   background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\n//   transition: background-color 0.3s ease;\n// `;\n\n// const ProgressContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   width: 1100px;\n//   margin-top: 20px;\n// `;\n\n// const ProgressBar = styled.div`\n//   flex-grow: 1;\n//   height: 30px;\n//   background-color: #fff;\n//   border-radius: 5px;\n//   margin-right: 10px;\n// `;\n\n// const ProgressFill = styled.div`\n//   height: 100%;\n//   width: ${({ progress }) => `${progress}%`};\n//   background-color: #76c7c0;\n//   border-radius: 5px;\n//   transition: width 0.3s ease;\n// `;\n\n// const ProgressText = styled.span`\n//   font-size: 16px;\n// `;\n\n// // Основной компонент для загрузки файла с прогресс-баром\n// const FileUploader = ({ file, setFile }) => {\n//   const [isDragging, setIsDragging] = useState(false);\n//   const [progress, setProgress] = useState(0); // Состояние для отслеживания прогресса\n//   const [isUploading, setIsUploading] = useState(false); // Состояние загрузки файла\n\n//   const handleChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setFile(e.target.files[0]);\n//     }\n//   };\n\n//   const handleDragEnter = (e) => {\n//     e.preventDefault();\n//     setIsDragging(true);\n//   };\n\n//   const handleDragLeave = () => {\n//     setIsDragging(false);\n//   };\n\n//   const handleDrop = (e) => {\n//     e.preventDefault();\n//     setIsDragging(false);\n\n//     if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n//       setFile(e.dataTransfer.files[0]);\n//     }\n//   };\n\n//   // Функция для отправки файла и отслеживания прогресса\n//   const handleSubmit = async () => {\n//     if (file) {\n//       setIsUploading(true); // Установка состояния загрузки файла\n\n//       // Используем FormData для передачи файла напрямую\n//       const formData = new FormData();\n//       formData.append('file', file);\n\n//       // Используем XMLHttpRequest для отслеживания прогресса загрузки\n//       const xhr = new XMLHttpRequest();\n//       xhr.open('POST', 'http://0.0.0.0:8002/check/1', true);\n\n//       // Отслеживание прогресса загрузки\n//       xhr.upload.onprogress = (event) => {\n//         if (event.lengthComputable) {\n//           const percentComplete = Math.round((event.loaded / event.total) * 100);\n//           setProgress(percentComplete); // Установка процента выполнения\n//         }\n//       };\n\n//       // Обработка завершения загрузки\n//       xhr.onload = () => {\n//         setIsUploading(false); // Завершение загрузки\n//         if (xhr.status === 200) {\n//           console.log('Загрузка успешна:', xhr.responseText);\n//         } else {\n//           console.error('Ошибка загрузки:', xhr.statusText);\n//         }\n//       };\n\n//       xhr.onerror = () => {\n//         setIsUploading(false); // Ошибка при загрузке\n//         console.error('Ошибка загрузки');\n//       };\n\n//       xhr.send(formData); // Отправка файла через FormData\n//     } else {\n//       alert('Пожалуйста, выберите файл для загрузки.');\n//     }\n//   };\n\n//   return (\n//     <Form\n//       onDragEnter={handleDragEnter}\n//       onDragOver={handleDragEnter}\n//       onDragLeave={handleDragLeave}\n//       onDrop={handleDrop}\n//     >\n//       <Label htmlFor=\"fileInput\">\n//         <Span isDragging={isDragging}>\n//           {file ? file.name : 'Загрузите файл'}\n//         </Span>\n//         <Inpt id=\"fileInput\" type=\"file\" onChange={handleChange} />\n//       </Label>\n\n//       {file && (\n//         <ProgressContainer>\n//           <ProgressBar>\n//             <ProgressFill progress={progress} />\n//           </ProgressBar>\n//           <ProgressText>{progress}%</ProgressText>\n//         </ProgressContainer>\n//       )}\n\n//       <Button\n//         type=\"button\"\n//         onClick={handleSubmit}\n//         disabled={!file || isUploading || progress < 100} // Блокируем кнопку до достижения 100%\n//       >\n//         {isUploading ? 'Загружается...' : 'Отправить на проверку'}\n//       </Button>\n//     </Form>\n//   );\n// };\n\n// export default FileUploader;\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Стили для формы и элементов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 45px;\n`;\n_c = Form;\nconst Button = styled.button`\n  width: 1098px;\n  height: 75px;\n  background-color: ${({\n  disabled\n}) => disabled ? '#ccc' : '#FFFFFF'};\n  color: ${({\n  disabled\n}) => disabled ? '#999' : '#000'};\n  cursor: ${({\n  disabled\n}) => disabled ? 'not-allowed' : 'pointer'};\n  border-radius: 10px;\n  border-style: none;\n  font-family: 'Montserrat';\n  font-size: 16px;\n  margin-bottom: 20px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${({\n  disabled\n}) => disabled ? '#ccc' : '#E2EDD0'};\n  }\n`;\nconst Inpt = styled.input`\n  display: none;\n`;\n_c2 = Inpt;\nconst Label = styled.label`\n  border: 2px dashed #000;\n  height: 250px;\n  text-align: center;\n  border-radius: 7px;\n  margin-top: 10px;\n  width: 1000px;\n  transition: background-color 0.3s;\n  background-color: #FFFFFF;\n\n  &:hover {\n    background-color: #E2EDD08C;\n  }\n`;\n_c3 = Label;\nconst Span = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${({\n  isDragging\n}) => isDragging ? '#F5F5F5' : 'transparent'};\n  transition: background-color 0.3s ease;\n`;\n_c4 = Span;\nconst ProgressContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 1100px;\n  margin-top: 20px;\n`;\n_c5 = ProgressContainer;\nconst ProgressBar = styled.div`\n  flex-grow: 1;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n_c6 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${({\n  progress\n}) => `${progress}%`};\n  background-color: #76c7c0;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n`;\n_c7 = ProgressFill;\nconst ProgressText = styled.span`\n  font-size: 16px;\n`;\n\n// Основной компонент для загрузки файла\n_c8 = ProgressText;\nconst FileUploader = ({\n  file,\n  setFile\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [progress, setProgress] = useState(0); // Состояние для отслеживания прогресса\n  const [isUploading, setIsUploading] = useState(false); // Состояние загрузки файла\n\n  const handleChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n  const handleDragEnter = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      setFile(e.dataTransfer.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onDragEnter: handleDragEnter,\n    onDragOver: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"fileInput\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {\n        isDragging: isDragging,\n        children: file ? file.name : 'Загрузите файл'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inpt, {\n        id: \"fileInput\",\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(ProgressContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n          progress: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressText, {\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"PrQr2CyVnAqB8v/gRmhJ9cDwqxE=\");\n_c9 = FileUploader;\nexport default FileUploader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Inpt\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Span\");\n$RefreshReg$(_c5, \"ProgressContainer\");\n$RefreshReg$(_c6, \"ProgressBar\");\n$RefreshReg$(_c7, \"ProgressFill\");\n$RefreshReg$(_c8, \"ProgressText\");\n$RefreshReg$(_c9, \"FileUploader\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Form","form","_c","Button","button","disabled","Inpt","input","_c2","Label","label","_c3","Span","span","isDragging","_c4","ProgressContainer","div","_c5","ProgressBar","_c6","ProgressFill","progress","_c7","ProgressText","_c8","FileUploader","file","setFile","_s","setIsDragging","setProgress","isUploading","setIsUploading","handleChange","e","target","files","handleDragEnter","preventDefault","handleDragLeave","handleDrop","dataTransfer","onDragEnter","onDragOver","onDragLeave","onDrop","children","htmlFor","name","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c9","$RefreshReg$"],"sources":["C:/Users/polly/Online-laboratory-testing-system/sdo-react-main/sdo/src/pages/LabaStud/Button.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import styled from 'styled-components';\r\n\r\n// // Стили для формы и элементов\r\n// const Form = styled.form`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   gap: 45px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   width: 1098px;\r\n//   height: 75px;\r\n//   background-color: ${({ disabled }) => (disabled ? '#ccc' : '#FFFFFF')};\r\n//   color: ${({ disabled }) => (disabled ? '#999' : '#000')};\r\n//   cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\r\n//   border-radius: 10px;\r\n//   border-style: none;\r\n//   font-family: 'Montserrat';\r\n//   font-size: 16px;\r\n//   margin-bottom: 20px;\r\n//   transition: background-color 0.3s;\r\n\r\n//   &:hover {\r\n//     background-color: ${({ disabled }) => (disabled ? '#ccc' : '#E2EDD0')};\r\n//   }\r\n// `;\r\n\r\n// const Inpt = styled.input`\r\n//   display: none;\r\n// `;\r\n\r\n// const Label = styled.label`\r\n//   border: 2px dashed #000;\r\n//   height: 250px;\r\n//   text-align: center;\r\n//   border-radius: 7px;\r\n//   margin-top: 10px;\r\n//   width: 1098px;\r\n//   transition: background-color 0.3s;\r\n//   background-color: #FFFFFF;\r\n\r\n//   &:hover {\r\n//     background-color: #E2EDD08C;\r\n//   }\r\n// `;\r\n\r\n// const Span = styled.span`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\r\n//   transition: background-color 0.3s ease;\r\n// `;\r\n\r\n// const ProgressContainer = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: space-between;\r\n//   width: 1100px;\r\n//   margin-top: 20px;\r\n// `;\r\n\r\n// const ProgressBar = styled.div`\r\n//   flex-grow: 1;\r\n//   height: 30px;\r\n//   background-color: #fff;\r\n//   border-radius: 5px;\r\n//   margin-right: 10px;\r\n// `;\r\n\r\n// const ProgressFill = styled.div`\r\n//   height: 100%;\r\n//   width: ${({ progress }) => `${progress}%`};\r\n//   background-color: #76c7c0;\r\n//   border-radius: 5px;\r\n//   transition: width 0.3s ease;\r\n// `;\r\n\r\n// const ProgressText = styled.span`\r\n//   font-size: 16px;\r\n// `;\r\n\r\n// // Основной компонент для загрузки файла с прогресс-баром\r\n// const FileUploader = ({ file, setFile }) => {\r\n//   const [isDragging, setIsDragging] = useState(false);\r\n//   const [progress, setProgress] = useState(0); // Состояние для отслеживания прогресса\r\n//   const [isUploading, setIsUploading] = useState(false); // Состояние загрузки файла\r\n\r\n//   const handleChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   const handleDragEnter = (e) => {\r\n//     e.preventDefault();\r\n//     setIsDragging(true);\r\n//   };\r\n\r\n//   const handleDragLeave = () => {\r\n//     setIsDragging(false);\r\n//   };\r\n\r\n//   const handleDrop = (e) => {\r\n//     e.preventDefault();\r\n//     setIsDragging(false);\r\n\r\n//     if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n//       setFile(e.dataTransfer.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Функция для отправки файла и отслеживания прогресса\r\n//   const handleSubmit = async () => {\r\n//     if (file) {\r\n//       setIsUploading(true); // Установка состояния загрузки файла\r\n\r\n//       // Используем FormData для передачи файла напрямую\r\n//       const formData = new FormData();\r\n//       formData.append('file', file);\r\n\r\n//       // Используем XMLHttpRequest для отслеживания прогресса загрузки\r\n//       const xhr = new XMLHttpRequest();\r\n//       xhr.open('POST', 'http://0.0.0.0:8002/check/1', true);\r\n\r\n//       // Отслеживание прогресса загрузки\r\n//       xhr.upload.onprogress = (event) => {\r\n//         if (event.lengthComputable) {\r\n//           const percentComplete = Math.round((event.loaded / event.total) * 100);\r\n//           setProgress(percentComplete); // Установка процента выполнения\r\n//         }\r\n//       };\r\n\r\n//       // Обработка завершения загрузки\r\n//       xhr.onload = () => {\r\n//         setIsUploading(false); // Завершение загрузки\r\n//         if (xhr.status === 200) {\r\n//           console.log('Загрузка успешна:', xhr.responseText);\r\n//         } else {\r\n//           console.error('Ошибка загрузки:', xhr.statusText);\r\n//         }\r\n//       };\r\n\r\n//       xhr.onerror = () => {\r\n//         setIsUploading(false); // Ошибка при загрузке\r\n//         console.error('Ошибка загрузки');\r\n//       };\r\n\r\n//       xhr.send(formData); // Отправка файла через FormData\r\n//     } else {\r\n//       alert('Пожалуйста, выберите файл для загрузки.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Form\r\n//       onDragEnter={handleDragEnter}\r\n//       onDragOver={handleDragEnter}\r\n//       onDragLeave={handleDragLeave}\r\n//       onDrop={handleDrop}\r\n//     >\r\n//       <Label htmlFor=\"fileInput\">\r\n//         <Span isDragging={isDragging}>\r\n//           {file ? file.name : 'Загрузите файл'}\r\n//         </Span>\r\n//         <Inpt id=\"fileInput\" type=\"file\" onChange={handleChange} />\r\n//       </Label>\r\n\r\n//       {file && (\r\n//         <ProgressContainer>\r\n//           <ProgressBar>\r\n//             <ProgressFill progress={progress} />\r\n//           </ProgressBar>\r\n//           <ProgressText>{progress}%</ProgressText>\r\n//         </ProgressContainer>\r\n//       )}\r\n\r\n//       <Button\r\n//         type=\"button\"\r\n//         onClick={handleSubmit}\r\n//         disabled={!file || isUploading || progress < 100} // Блокируем кнопку до достижения 100%\r\n//       >\r\n//         {isUploading ? 'Загружается...' : 'Отправить на проверку'}\r\n//       </Button>\r\n//     </Form>\r\n//   );\r\n// };\r\n\r\n// export default FileUploader;\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Стили для формы и элементов\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 45px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 1098px;\r\n  height: 75px;\r\n  background-color: ${({ disabled }) => (disabled ? '#ccc' : '#FFFFFF')};\r\n  color: ${({ disabled }) => (disabled ? '#999' : '#000')};\r\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\r\n  border-radius: 10px;\r\n  border-style: none;\r\n  font-family: 'Montserrat';\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ disabled }) => (disabled ? '#ccc' : '#E2EDD0')};\r\n  }\r\n`;\r\n\r\nconst Inpt = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  border: 2px dashed #000;\r\n  height: 250px;\r\n  text-align: center;\r\n  border-radius: 7px;\r\n  margin-top: 10px;\r\n  width: 1000px;\r\n  transition: background-color 0.3s;\r\n  background-color: #FFFFFF;\r\n\r\n  &:hover {\r\n    background-color: #E2EDD08C;\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\r\n  transition: background-color 0.3s ease;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 1100px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  flex-grow: 1;\r\n  height: 30px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProgressFill = styled.div`\r\n  height: 100%;\r\n  width: ${({ progress }) => `${progress}%`};\r\n  background-color: #76c7c0;\r\n  border-radius: 5px;\r\n  transition: width 0.3s ease;\r\n`;\r\n\r\nconst ProgressText = styled.span`\r\n  font-size: 16px;\r\n`;\r\n\r\n// Основной компонент для загрузки файла\r\nconst FileUploader = ({ file, setFile }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [progress, setProgress] = useState(0); // Состояние для отслеживания прогресса\r\n  const [isUploading, setIsUploading] = useState(false); // Состояние загрузки файла\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleDragEnter = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n\r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      setFile(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onDragEnter={handleDragEnter}\r\n      onDragOver={handleDragEnter}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n    >\r\n      <Label htmlFor=\"fileInput\">\r\n        <Span isDragging={isDragging}>\r\n          {file ? file.name : 'Загрузите файл'}\r\n        </Span>\r\n        <Inpt id=\"fileInput\" type=\"file\" onChange={handleChange} />\r\n      </Label>\r\n\r\n      {file && (\r\n        <ProgressContainer>\r\n          <ProgressBar>\r\n            <ProgressFill progress={progress} />\r\n          </ProgressBar>\r\n          <ProgressText>{progress}%</ProgressText>\r\n        </ProgressContainer>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,IAAK;AACzB;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,IAAI;AAOV,MAAMG,MAAM,GAAGN,MAAM,CAACO,MAAO;AAC7B;AACA;AACA,sBAAsB,CAAC;EAAEC;AAAS,CAAC,KAAMA,QAAQ,GAAG,MAAM,GAAG,SAAW;AACxE,WAAW,CAAC;EAAEA;AAAS,CAAC,KAAMA,QA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}