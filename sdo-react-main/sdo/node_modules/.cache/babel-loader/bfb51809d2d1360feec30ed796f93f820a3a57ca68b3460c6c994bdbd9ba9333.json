{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polly\\\\Online-laboratory-testing-system\\\\sdo-react-main\\\\sdo\\\\src\\\\components\\\\BreadCrumbs.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useLocation } from \"react-router-dom\";\n// import \"../styles/style.css\";\n// import styled from 'styled-components'\n\n// const Ul = styled.ul`\n//     display: flex;\n//     gap: 15px;\n//     flex-direction: row;\n//     .list__bread{\n//     list-style-type: none;\n//     }\n//     .link__bread{\n//         text-decoration: none;\n//         color: #000;\n//         font-family: \"Montserrat\";\n//         font-size: 16px;\n//     }\n// `\n\n// const Bread = () => {\n//     const location = useLocation();\n//     const pathNames = location.pathname.split('/').filter((path) => path !== '');\n\n//     const pageNames = {\n//         \"/\": \"Главная\",\n//         \"login\": \"Авторизация\", \n//         \"laboratory\": \"Лабораторные работы\", \n//         \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\", \n//         \"Registration\" : \"Регистрация\",\n//         \"profile\" : \"Личный кабинет\",\n//         \"LaboratoryAdd\" : 'Добавить лабораторные работы',\n//         \"PersonalTeacher\" : 'Личный кабинет преподователя',\n//         \"registration\" : 'Регистрация',\n//         \"StudLaboratory\" : 'Лабораторные работы для студентов',\n//         \"labaStud\" : 'Лабораторные работы',\n//         \"attempts\" : 'Страничка с тестами'\n//     };\n\n//     const breadcrumbs = pathNames.map((path, index) => {\n//         const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\n//         const isLast = index === pathNames.length - 1;\n\n//         const crumbClass = isLast ? \"breadcrumb-last\" : \"link__bread\";\n//         const pageName = pageNames[path] || path;\n\n//         return (\n//             <li key={index} className={`list__bread ${crumbClass}`}>\n//                 {isLast ? (\n//                     <Link className=\"link__bread\">{pageName} /</Link>\n//                 ) : (\n//                     <Link to={routeTo}>{pageName}</Link>\n//                 )}\n//             </li>\n//         );\n//     });\n\n//     return (\n//         <>\n//             <nav aria-label=\"breadcrumbs\">\n//                 <Ul>\n//                     <li className=\"list__bread\">\n//                         <Link to='/' className=\"link__bread\">Главная /</Link>\n//                     </li>\n//                     {breadcrumbs}\n//                 </Ul>\n//             </nav>\n//         </> \n//     );\n// }\n\n// export default Bread;\n\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ul = styled.ul`\n    display: flex;\n    gap: 5px;\n    flex-direction: row;\n    .list__bread {\n        list-style-type: none;\n        font-family: \"Montserrat\";\n    }\n    .link__bread {\n        text-decoration: none;\n        color: #000;\n        font-family: \"Montserrat\";\n        font-size: 16px;\n    }\n    .breadcrumb-last {\n        font-weight: normal;\n        text-decoration: none;\n        color: #000;\n    }\n`;\n_c = Ul;\nconst Bread = () => {\n  _s();\n  const location = useLocation();\n  const pathNames = location.pathname.split('/').filter(path => path !== '');\n\n  // Определяем названия для путей\n  const pageNames = {\n    \"/\": \"Главная\",\n    \"login\": \"Авторизация\",\n    \"laboratory\": \"Лабораторные работы\",\n    \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\",\n    \"Registration\": \"Регистрация\",\n    \"profile\": \"Личный кабинет\",\n    \"LaboratoryAdd\": 'Добавить лабораторные работы',\n    \"PersonalTeacher\": 'Личный кабинет преподавателя',\n    \"registration\": 'Регистрация',\n    \"StudLaboratory\": 'Лабораторные работы для студентов',\n    \"labaStud\": 'Лабораторные работы',\n    \"attempts\": 'Страничка с тестами'\n  };\n  const breadcrumbs = pathNames.map((path, index) => {\n    const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\n    const isLast = index === pathNames.length - 1;\n\n    // Проверяем, является ли часть маршрута динамической (например, id)\n    let pageName = pageNames[path] || path;\n    if (pathNames[index - 1] === 'labaStud' && !isNaN(path)) {\n      pageName = `Лабораторная работа №${path}`; // Динамическая часть с id\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list__bread\",\n      children: !isLast ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: routeTo,\n          className: \"link__bread\",\n          children: pageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-last\",\n          children: pageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumbs\",\n    children: /*#__PURE__*/_jsxDEV(Ul, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__bread\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"link__bread\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), breadcrumbs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(Bread, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = Bread;\nexport default Bread;\nvar _c, _c2;\n$RefreshReg$(_c, \"Ul\");\n$RefreshReg$(_c2, \"Bread\");","map":{"version":3,"names":["React","Link","useLocation","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Ul","ul","_c","Bread","_s","location","pathNames","pathname","split","filter","path","pageNames","breadcrumbs","map","index","routeTo","slice","join","isLast","length","pageName","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c2","$RefreshReg$"],"sources":["C:/Users/polly/Online-laboratory-testing-system/sdo-react-main/sdo/src/components/BreadCrumbs.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import \"../styles/style.css\";\r\n// import styled from 'styled-components'\r\n\r\n// const Ul = styled.ul`\r\n//     display: flex;\r\n//     gap: 15px;\r\n//     flex-direction: row;\r\n//     .list__bread{\r\n//     list-style-type: none;\r\n//     }\r\n//     .link__bread{\r\n//         text-decoration: none;\r\n//         color: #000;\r\n//         font-family: \"Montserrat\";\r\n//         font-size: 16px;\r\n//     }\r\n// `\r\n\r\n// const Bread = () => {\r\n//     const location = useLocation();\r\n//     const pathNames = location.pathname.split('/').filter((path) => path !== '');\r\n\r\n   \r\n//     const pageNames = {\r\n//         \"/\": \"Главная\",\r\n//         \"login\": \"Авторизация\", \r\n//         \"laboratory\": \"Лабораторные работы\", \r\n//         \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\", \r\n//         \"Registration\" : \"Регистрация\",\r\n//         \"profile\" : \"Личный кабинет\",\r\n//         \"LaboratoryAdd\" : 'Добавить лабораторные работы',\r\n//         \"PersonalTeacher\" : 'Личный кабинет преподователя',\r\n//         \"registration\" : 'Регистрация',\r\n//         \"StudLaboratory\" : 'Лабораторные работы для студентов',\r\n//         \"labaStud\" : 'Лабораторные работы',\r\n//         \"attempts\" : 'Страничка с тестами'\r\n//     };\r\n\r\n\r\n//     const breadcrumbs = pathNames.map((path, index) => {\r\n//         const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\r\n//         const isLast = index === pathNames.length - 1;\r\n\r\n//         const crumbClass = isLast ? \"breadcrumb-last\" : \"link__bread\";\r\n//         const pageName = pageNames[path] || path;\r\n\r\n//         return (\r\n//             <li key={index} className={`list__bread ${crumbClass}`}>\r\n//                 {isLast ? (\r\n//                     <Link className=\"link__bread\">{pageName} /</Link>\r\n//                 ) : (\r\n//                     <Link to={routeTo}>{pageName}</Link>\r\n//                 )}\r\n//             </li>\r\n//         );\r\n//     });\r\n\r\n//     return (\r\n//         <>\r\n//             <nav aria-label=\"breadcrumbs\">\r\n//                 <Ul>\r\n//                     <li className=\"list__bread\">\r\n//                         <Link to='/' className=\"link__bread\">Главная /</Link>\r\n//                     </li>\r\n//                     {breadcrumbs}\r\n//                 </Ul>\r\n//             </nav>\r\n//         </> \r\n//     );\r\n// }\r\n\r\n// export default Bread;\r\n\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/style.css\";\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n    display: flex;\r\n    gap: 5px;\r\n    flex-direction: row;\r\n    .list__bread {\r\n        list-style-type: none;\r\n        font-family: \"Montserrat\";\r\n    }\r\n    .link__bread {\r\n        text-decoration: none;\r\n        color: #000;\r\n        font-family: \"Montserrat\";\r\n        font-size: 16px;\r\n    }\r\n    .breadcrumb-last {\r\n        font-weight: normal;\r\n        text-decoration: none;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst Bread = () => {\r\n    const location = useLocation();\r\n    const pathNames = location.pathname.split('/').filter((path) => path !== '');\r\n\r\n    // Определяем названия для путей\r\n    const pageNames = {\r\n        \"/\": \"Главная\",\r\n        \"login\": \"Авторизация\", \r\n        \"laboratory\": \"Лабораторные работы\", \r\n        \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\", \r\n        \"Registration\" : \"Регистрация\",\r\n        \"profile\" : \"Личный кабинет\",\r\n        \"LaboratoryAdd\" : 'Добавить лабораторные работы',\r\n        \"PersonalTeacher\" : 'Личный кабинет преподавателя',\r\n        \"registration\" : 'Регистрация',\r\n        \"StudLaboratory\" : 'Лабораторные работы для студентов',\r\n        \"labaStud\" : 'Лабораторные работы',\r\n        \"attempts\" : 'Страничка с тестами'\r\n    };\r\n\r\n    const breadcrumbs = pathNames.map((path, index) => {\r\n        const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\r\n        const isLast = index === pathNames.length - 1;\r\n\r\n        // Проверяем, является ли часть маршрута динамической (например, id)\r\n        let pageName = pageNames[path] || path;\r\n        if (pathNames[index - 1] === 'labaStud' && !isNaN(path)) {\r\n            pageName = `Лабораторная работа №${path}`;  // Динамическая часть с id\r\n        }\r\n\r\n        return (\r\n            <li key={index} className=\"list__bread\">\r\n                {!isLast ? (\r\n                    <>\r\n                        <span>/ </span>\r\n                        <Link to={routeTo} className=\"link__bread\">{pageName}</Link>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <span>/ </span>\r\n                        <span className=\"breadcrumb-last\">{pageName}</span>\r\n                    </>\r\n                )}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <nav aria-label=\"breadcrumbs\">\r\n            <Ul>\r\n                <li className=\"list__bread\">\r\n                    <Link to='/' className=\"link__bread\">Главная</Link>\r\n                </li>\r\n                {breadcrumbs}\r\n            </Ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Bread;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}