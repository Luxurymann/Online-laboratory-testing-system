{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polly\\\\Online-laboratory-testing-system\\\\sdo-react-main\\\\sdo\\\\src\\\\pages\\\\Laboratory\\\\StudLaboratory.jsx\",\n  _s = $RefreshSig$();\n//     import { Link, useLocation } from \"react-router-dom\";\n//     import React, { useState, useEffect } from \"react\";\n//     import \"../../styles/style.css\";\n//     import styled from 'styled-components'\n\n//     const SectionLab = styled.div`\n//         display: flex;\n//         flex-direction: column;\n//         align-items: center;\n//         gap: 10px;\n//         padding: 25px 0px 20px;\n//         .section__lab-blockSearch{\n//         display: flex;\n//         gap: 10px;\n//         align-items: center;\n//         }\n//         .section__lab-input{\n//             width: 290px;\n//             height: 26px;\n//             padding: 10px;\n//             background: #F0F0F0;\n//             border-style: none;\n//             border-radius: 4px;\n//             font-size: 16px;\n//         }\n//         .section__lab-input:focus{\n//             outline-width: 0;\n//         }\n//         .section__lab-block{\n//             padding-left: 2%;\n//         }\n\n//         .section__lab-button{\n//             width: 285px;\n//             padding: 10px;\n//             border-radius: 4px;\n//             text-align: center;\n//             color: #000;\n//             font-family: 'Montserrat';\n//             line-height: 27px;\n//             text-decoration: none;\n//             background: #F0F0F0;\n//             border-style: none;\n//             border-radius: 4px;\n//             font-size: 10px;\n//         }\n//         .section__lab-btn{\n//             width: 280px;\n//             padding: 10px;\n//             font-size: 16px;\n//             text-align: center;\n//             color: #000;\n//             font-family: Montserrat;\n//             line-height: 27px;\n//             text-decoration: none;\n//             background: #F0F0F0;\n//             border-style: none;\n//             border-radius: 4px;\n//         }\n//         .section__lab-btn:hover{\n//             background: #D9D9D9;\n//             transition: 0.3s;\n//         }\n//         .section__lab-list {\n//             width: 1190px;\n//             length: 840px;\n//             padding: 40px;\n//             font-size: 18px;\n//             text-align: left;\n//             color: #000;\n//             font-family: Montserrat;\n//             text-decoration: none;\n//             background: #D8D8D861;\n//             border-radius: 7px;\n//             margin-top: 20px;\n//             display: block;\n//             border-style: none;\n//         }\n\n//         .section__lab-list-ready {\n//             width: 1190px;\n//             length: 840px;\n//             padding: 40px;\n//             font-size: 18px;\n//             text-align: left;\n//             color: #000;\n//             font-family: Montserrat;\n//             text-decoration: none;\n//             background: #E2EDD08C;\n//             border-radius: 7px;\n//             margin-top: 20px;\n//             display: block;\n//             border-style: none;\n//         }\n\n//         .section__lab-block {\n//             margin-bottom: 10px;\n//         }\n\n//         .alternate-color{\n//             background: rgba(216, 216, 216, 0.38);\n//         }   \n\n//     `\n// const NameLab = styled.p`\n//         color: #000;\n//         text-align: center;\n//         font-family: 'Montserrat';\n//         font-size: 19px;\n//         padding-left: 5%;\n// `\n//     const ListLab = styled.ul`\n//         display: flex;\n//         flex-direction: column;\n//         gap: 10px;\n//         .section__lab-number{\n//             width: 1246px;\n//             height: 120px;\n//             background: rgba(226, 237, 208, 0.55);\n//             border-radius: 10px;\n//             list-style: none;\n//             display: flex;\n//             align-items: center;\n//         }\n//         .list__link{\n//             text-decoration: none;\n//         }\n// `\n// const StudLaboratory = () => {\n//     const [labItems, setLabItems] = useState({ isLoading: true, data: [] });\n//     const [searchValue, setSearchValue] = useState(\"\");\n\n//     const history = useLocation();\n\n//     const handleSearchChange = (event) => {\n//         setSearchValue(event.target.value);\n//     };\n\n//     const handleDeleteClick = (index) => {\n//         const updatedLabItems = [...labItems.data];\n//         updatedLabItems.splice(index, 1);\n//         setLabItems((prev) => ({ ...prev, data: updatedLabItems }));\n//     };\n\n//     useEffect(() => {\n//         const timeout = setTimeout(() => {\n//             setLabItems((prev) => ({ ...prev, isLoading: false }));\n//         }, 5000);\n//         return () => {\n//             clearTimeout(timeout);\n//         };\n//     }, []);\n//         // useEffect(()=>{\n//         //     setLabItems(prev => ({\n//         //         ...prev,\n\n//         //     }))\n//         // },[])\n\n//         useEffect(() => {\n//             fetch('http://0.0.0.0:8002/tasks', {\n//               method: 'GET',\n//               headers: {\n//                 'accept': 'application/json'\n//               }\n//             })\n//             .then((response) => {\n//                 if (response.ok) {\n//                     return response.json();\n//                 } else {\n//                     throw new Error(\"Failed to fetch tasks\");\n//                 }\n//             })\n//             .then((data) => {\n//                 const tasksArray = Object.keys(data).map((key) => ({\n//                     id: key,\n//                     description: data[key],\n//                 }));\n//                 setLabItems({ isLoading: false, data: tasksArray });\n//             })\n//               .catch(error => {\n//                 console.error(error.message);\n//               });\n//           }, []);        \n\n//         const getColors = (index) => {\n//             return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\"\n//         }; \n//         const handleLabClick = (id) => {\n//             history.push(`/labaStud/${id}`);\n//           };\n//         return (\n//                 <>\n//                     <SectionLab>\n//                         <div className=\"section__lab-block\">\n//                             <div className=\"section__lab-blockSearch\">\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\n//                                 <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.8724 12.4554L17.8716 16.4602C18.0502 16.6589 18.0414 16.9631 17.8516 17.1511L17.1518 17.8519C17.0579 17.9467 16.9301 18 16.7968 18C16.6635 18 16.5358 17.9467 16.4419 17.8519L12.4427 13.8471C12.332 13.7362 12.2317 13.6156 12.1427 13.4867L11.3929 12.4855C10.1521 13.4776 8.61142 14.0178 7.02368 14.0173C3.7519 14.0287 0.908851 11.7686 0.177695 8.5751C-0.553461 5.38161 1.02241 2.10699 3.97235 0.689914C6.92229 -0.727158 10.459 0.0915124 12.4886 2.66125C14.5183 5.23099 14.4992 8.86596 12.4427 11.4142L13.4425 12.105C13.5986 12.2051 13.7428 12.3226 13.8724 12.4554ZM2.02472 7.00862C2.02472 9.77337 4.26288 12.0146 7.02378 12.0146C8.34962 12.0146 9.62115 11.4872 10.5587 10.5484C11.4962 9.6096 12.0228 8.3363 12.0228 7.00862C12.0228 4.24387 9.78469 2.00259 7.02378 2.00259C4.26288 2.00259 2.02472 4.24387 2.02472 7.00862Z\" fill=\"black\"/>\n//                                 </svg>\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Поиск\"\n//                                     value={searchValue}\n//                                     onChange={handleSearchChange}\n//                                     className=\"section__lab-input\"\n//                                     />\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                                     Все лабораторные\n//                                 </Link>\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                                     Выполнено                            \n//                                 </Link>\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                                     Не выполнено\n//                                 </Link>\n//                             </div>\n\n//                             {/* Добавляем кнопку для \"Лабораторная №1\" */}\n//                             <Link to=\"/labaStud/1\" className=\"section__lab-list\">\n//                                 Лабораторная №1 “Создание программы с использованием классов”\n//                             </Link>\n//                             {/* Добавляем кнопку для \"Лабораторная №2\" */}\n//                             <Link to=\"/labaStud/2\" className=\"section__lab-list-ready\" >\n//                                 Лабораторная №2 “Создание программы с использованием классов”\n//                             </Link>\n//                         </div>\n//                         <ListLab>\n//                         {labItems.isLoading ? (\n//                     <p>Загрузка...</p>\n//                 ) : (\n//                     labItems.data.map((labTitle) => (\n//                         <Link className=\"list__link\" to={`/labaStud/${labTitle.id}`} key={labTitle.id}>\n//                         <li className={getColors()} onClick={() => handleLabClick(labTitle.id)}>\n//                             <NameLab>{labTitle.description}</NameLab>\n//                         </li>\n//                         </Link>\n//                     )).reverse()\n//                 )}\n//                         </ListLab>\n//                     </SectionLab>\n//                 </>\n//         );\n//     }\n\n// export default StudLaboratory;\n\n// import { Link, useNavigate } from \"react-router-dom\";  // useNavigate вместо useLocation\n// import React, { useState, useEffect } from \"react\";\n// import \"../../styles/style.css\";\n// import styled from 'styled-components';\n\n// const SectionLab = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     gap: 10px;\n//     padding: 25px 0px 20px;\n//     .section__lab-blockSearch {\n//         display: flex;\n//         gap: 10px;\n//         align-items: center;\n//     }\n//     .section__lab-input {\n//         width: 290px;\n//         height: 26px;\n//         padding: 10px;\n//         background: #F0F0F0;\n//         border-style: none;\n//         border-radius: 4px;\n//         font-size: 16px;\n//     }\n//     .section__lab-input:focus {\n//         outline-width: 0;\n//     }\n//     .section__lab-block {\n//         padding-left: 2%;\n//     }\n\n//     .section__lab-button {\n//         width: 285px;\n//         padding: 10px;\n//         border-radius: 4px;\n//         text-align: center;\n//         color: #000;\n//         font-family: 'Montserrat';\n//         line-height: 27px;\n//         text-decoration: none;\n//         background: #F0F0F0;\n//         border-style: none;\n//         border-radius: 4px;\n//         font-size: 10px;\n//     }\n//     .section__lab-btn {\n//         width: 280px;\n//         padding: 10px;\n//         font-size: 16px;\n//         text-align: center;\n//         color: #000;\n//         font-family: Montserrat;\n//         line-height: 27px;\n//         text-decoration: none;\n//         background: #F0F0F0;\n//         border-style: none;\n//         border-radius: 4px;\n//     }\n//     .section__lab-btn:hover {\n//         background: #D9D9D9;\n//         transition: 0.3s;\n//     }\n//     .section__lab-list {\n//         width: 1190px;\n//         padding: 40px;\n//         font-size: 18px;\n//         text-align: left;\n//         color: #000;\n//         font-family: Montserrat;\n//         background: #D8D8D861;\n//         border-radius: 7px;\n//         margin-top: 20px;\n//         display: block;\n//         border-style: none;\n//     }\n//     .section__lab-list-ready {\n//         width: 1190px;\n//         padding: 40px;\n//         font-size: 18px;\n//         text-align: left;\n//         color: #000;\n//         font-family: Montserrat;\n//         background: #E2EDD08C;\n//         border-radius: 7px;\n//         margin-top: 20px;\n//         display: block;\n//         border-style: none;\n//     }\n//     .section__lab-block {\n//         margin-bottom: 10px;\n//     }\n//     .alternate-color {\n//         background: rgba(216, 216, 216, 0.38);\n//     }\n// `;\n\n// const NameLab = styled.p`\n//     color: #000;\n//     text-align: center;\n//     font-family: 'Montserrat';\n//     font-size: 19px;\n//     padding-left: 5%;\n// `;\n\n// const ListLab = styled.ul`\n//     display: flex;\n//     flex-direction: column;\n//     gap: 10px;\n//     .section__lab-number {\n//         width: 1246px;\n//         height: auto;\n//         background: rgba(226, 237, 208, 0.55);\n//         border-radius: 10px;\n//         list-style: none;\n//         display: flex;\n//         flex-direction: column;\n//         padding: 20px;\n//     }\n//     .list__link {\n//         text-decoration: none;\n//     }\n//     .task-block {\n//         display: flex;\n//         justify-content: space-between;\n//         padding: 5px 0;\n//     }\n//     .task-button {\n//         padding: 5px 10px;\n//         background-color: #D9D9D9;\n//         border: none;\n//         border-radius: 5px;\n//         cursor: pointer;\n//     }\n// `;\n\n// const StudLaboratory = () => {\n//     const [labItems, setLabItems] = useState({ isLoading: true, data: [] });\n//     const [searchValue, setSearchValue] = useState(\"\");\n\n//     const navigate = useNavigate();  // заменяем useLocation на useNavigate\n\n//     const handleSearchChange = (event) => {\n//         setSearchValue(event.target.value);\n//     };\n\n//     const handleDeleteClick = (index) => {\n//         const updatedLabItems = [...labItems.data];\n//         updatedLabItems.splice(index, 1);\n//         setLabItems((prev) => ({ ...prev, data: updatedLabItems }));\n//     };\n\n//     useEffect(() => {\n//         const timeout = setTimeout(() => {\n//             setLabItems((prev) => ({ ...prev, isLoading: false }));\n//         }, 5000);\n//         return () => {\n//             clearTimeout(timeout);\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         fetch('http://0.0.0.0:8002/tasks', {\n//             method: 'GET',\n//             headers: {\n//                 'accept': 'application/json'\n//             }\n//         })\n//             .then((response) => {\n//                 if (response.ok) {\n//                     return response.json();\n//                 } else {\n//                     throw new Error(\"Failed to fetch tasks\");\n//                 }\n//             })\n//             .then((data) => {\n//                 const tasksArray = Object.keys(data).map((key) => ({\n//                     id: key,\n//                     description: data[key].description,\n//                     tasks: data[key].tasks || []  // предполагаем, что задачи находятся в поле tasks\n//                 }));\n//                 setLabItems({ isLoading: false, data: tasksArray });\n//             })\n//             .catch(error => {\n//                 console.error(error.message);\n//             });\n//     }, []);\n\n//     const getColors = (index) => {\n//         return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\";\n//     };\n\n//     const handleLabClick = (id) => {\n//         navigate(`/labaStud/${id}`);  // используем navigate для навигации\n//     };\n\n//     return (\n//         <>\n//             <SectionLab>\n//                 <div className=\"section__lab-block\">\n//                     <div className=\"section__lab-blockSearch\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Поиск\"\n//                             value={searchValue}\n//                             onChange={handleSearchChange}\n//                             className=\"section__lab-input\"\n//                         />\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                             Все лабораторные\n//                         </Link>\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                             Выполнено\n//                         </Link>\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\n//                             Не выполнено\n//                         </Link>\n//                     </div>\n\n//                     {/* Лабораторная №1 */}\n//                     <div className=\"section__lab-list\">\n//                         <p>Лабораторная №1: “Создание программы с использованием классов”</p>\n//                         {/* Нет подзадач, одна кнопка */}\n//                         <button onClick={() => handleLabClick(1)} className=\"task-button\">Перейти</button>\n//                     </div>\n\n//                     {/* Лабораторная №2 */}\n//                     <div className=\"section__lab-list-ready\">\n//                         <p>Лабораторная №2: “Создание программы с использованием классов”</p>\n//                         {/* Есть подзадачи */}\n//                         <div className=\"task-block\">\n//                             <span>Задача 1: Создать класс</span>\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\n//                         </div>\n//                         <div className=\"task-block\">\n//                             <span>Задача 2: Написать методы</span>\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\n//                         </div>\n//                         <div className=\"task-block\">\n//                             <span>Задача 3: Протестировать код</span>\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <ListLab>\n//                     {labItems.isLoading ? (\n//                         <p>Загрузка...</p>\n//                     ) : (\n//                         labItems.data\n//                             .filter(lab => lab.description.toLowerCase().includes(searchValue.toLowerCase()))\n//                             .map((labItem, index) => (\n//                                 <li className={getColors(index)} key={labItem.id}>\n//                                     <NameLab>{labItem.description}</NameLab>\n//                                     {labItem.tasks.length > 0 ? (\n//                                         labItem.tasks.map((task, taskIndex) => (\n//                                             <div className=\"task-block\" key={taskIndex}>\n//                                                 <span>{`Задача ${taskIndex + 1}: ${task}`}</span>\n//                                                 <button\n//                                                     className=\"task-button\"\n//                                                     onClick={() => handleLabClick(`${labItem.id}/task${taskIndex + 1}`)}\n//                                                 >\n//                                                     Перейти\n//                                                 </button>\n//                                             </div>\n//                                         ))\n//                                     ) : (\n//                                         <button\n//                                             className=\"task-button\"\n//                                             onClick={() => handleLabClick(labItem.id)}\n//                                         >\n//                                             Перейти\n//                                         </button>\n//                                     )}\n//                                 </li>\n//                             ))\n//                     )}\n//                 </ListLab>\n//             </SectionLab>\n//         </>\n//     );\n// };\n\n// export default StudLaboratory;\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/style.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SectionLab = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    padding: 25px 0px 20px;\n    \n    .section__lab-blockSearch {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n    }\n\n    .section__lab-input {\n        width: 290px;\n        height: 26px;\n        padding: 10px;\n        background: #F0F0F0;\n        border: none;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n\n    .section__lab-input:focus {\n        outline: none;\n    }\n\n    .section__lab-button {\n        width: 285px;\n        padding: 10px;\n        border-radius: 4px;\n        text-align: center;\n        color: #000;\n        font-family: 'Montserrat';\n        line-height: 27px;\n        text-decoration: none;\n        background: #F0F0F0;\n        border: none;\n        font-size: 10px;\n    }\n\n    .section__lab-btn {\n        width: 280px;\n        padding: 10px;\n        font-size: 16px;\n        text-align: center;\n        color: #000;\n        font-family: Montserrat;\n        line-height: 27px;\n        text-decoration: none;\n        background: #F0F0F0;\n        border: none;\n        border-radius: 4px;\n    }\n\n    .section__lab-btn:hover {\n        background: #D9D9D9;\n        transition: 0.3s;\n    }\n\n    .section__lab-list {\n        width: 1190px;\n        padding: 40px;\n        font-size: 18px;\n        text-align: left;\n        color: #000;\n        font-family: Montserrat;\n        background: #D8D8D861;\n        border-radius: 7px;\n        margin-top: 20px;\n        display: block;\n        border: none;\n    }\n\n    .section__lab-list-ready {\n        width: 1190px;\n        padding: 40px;\n        font-size: 18px;\n        text-align: left;\n        color: #000;\n        font-family: Montserrat;\n        background: #E6F4CF;\n        border-radius: 7px;\n        display: block;\n        border: none;\n    }\n\n    .alternate-color {\n        background: rgba(216, 216, 216, 0.38);\n    }\n`;\n_c = SectionLab;\nconst NameLab = styled.p`\n    color: #000;\n    text-align: center;\n    font-family: 'Montserrat';\n    font-size: 19px;\n    padding-left: 5%;\n`;\n_c2 = NameLab;\nconst ListLab = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`;\n_c3 = ListLab;\nconst TaskBlock = styled.div`\n    width: 100%;\n    background: #fff;\n    border-radius: 10px;\n    padding: 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n_c4 = TaskBlock;\nconst TaskButton = styled.button`\n    padding: 5px 10px;\n    background-color: #D9D9D9;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #C0C0C0;\n    }\n`;\n_c5 = TaskButton;\nconst StudLaboratory = () => {\n  _s();\n  const [labItems, setLabItems] = useState({\n    isLoading: true,\n    data: []\n  });\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSearchChange = event => {\n    setSearchValue(event.target.value);\n  };\n  const handleDeleteClick = index => {\n    const updatedLabItems = [...labItems.data];\n    updatedLabItems.splice(index, 1);\n    setLabItems(prev => ({\n      ...prev,\n      data: updatedLabItems\n    }));\n  };\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLabItems(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n  useEffect(() => {\n    fetch('http://0.0.0.0:8002/tasks', {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Failed to fetch tasks\");\n      }\n    }).then(data => {\n      const tasksArray = Object.keys(data).map(key => ({\n        id: key,\n        description: data[key].description,\n        tasks: data[key].tasks || []\n      }));\n      setLabItems({\n        isLoading: false,\n        data: tasksArray\n      });\n    }).catch(error => {\n      console.error(error.message);\n    });\n  }, []);\n  const getColors = index => {\n    return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\";\n  };\n  const handleLabClick = id => {\n    navigate(`/labaStud/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SectionLab, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section__lab-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section__lab-blockSearch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n            value: searchValue,\n            onChange: handleSearchChange,\n            className: \"section__lab-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            id: \"buttonAdd\",\n            className: \"section__lab-btn\",\n            children: \"\\u0412\\u0441\\u0435 \\u043B\\u0430\\u0431\\u043E\\u0440\\u0430\\u0442\\u043E\\u0440\\u043D\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            id: \"buttonAdd\",\n            className: \"section__lab-btn\",\n            children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            id: \"buttonAdd\",\n            className: \"section__lab-btn\",\n            children: \"\\u041D\\u0435 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section__lab-list\",\n          children: [\"\\u041B\\u0430\\u0431\\u043E\\u0440\\u0430\\u0442\\u043E\\u0440\\u043D\\u0430\\u044F \\u21161: \\u201C\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \\u043A\\u043B\\u0430\\u0441\\u0441\\u043E\\u0432\\u201D\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLabClick(1),\n            className: \"task-button\",\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section__lab-list-ready\",\n          children: [\"\\u041B\\u0430\\u0431\\u043E\\u0440\\u0430\\u0442\\u043E\\u0440\\u043D\\u0430\\u044F \\u21162: \\u201C\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \\u043A\\u043B\\u0430\\u0441\\u0441\\u043E\\u0432\\u201D\", /*#__PURE__*/_jsxDEV(TaskBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430 1: \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u043B\\u0430\\u0441\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n              onClick: () => handleLabClick('2'),\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TaskBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430 2: \\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043C\\u0435\\u0442\\u043E\\u0434\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n              onClick: () => handleLabClick('2'),\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TaskBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430 3: \\u041F\\u0440\\u043E\\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043E\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n              onClick: () => handleLabClick('2'),\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListLab, {\n        children: labItems.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 25\n        }, this) : labItems.data.filter(lab => lab.description.toLowerCase().includes(searchValue.toLowerCase())).map((labItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: getColors(index),\n          children: [/*#__PURE__*/_jsxDEV(NameLab, {\n            children: labItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 37\n          }, this), labItem.tasks.length > 0 ? labItem.tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(TaskBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: `Задача ${taskIndex + 1}: ${task}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TaskButton, {\n              onClick: () => handleLabClick(`${labItem.id}/task${taskIndex + 1}`),\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 49\n            }, this)]\n          }, taskIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 45\n          }, this)) : /*#__PURE__*/_jsxDEV(TaskButton, {\n            onClick: () => handleLabClick(labItem.id),\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 41\n          }, this)]\n        }, labItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(StudLaboratory, \"JOwBb5f2vzdr2KCvJjDnNkjVFQk=\", false, function () {\n  return [useNavigate];\n});\n_c6 = StudLaboratory;\nexport default StudLaboratory;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SectionLab\");\n$RefreshReg$(_c2, \"NameLab\");\n$RefreshReg$(_c3, \"ListLab\");\n$RefreshReg$(_c4, \"TaskBlock\");\n$RefreshReg$(_c5, \"TaskButton\");\n$RefreshReg$(_c6, \"StudLaboratory\");","map":{"version":3,"names":["Link","useNavigate","React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionLab","div","_c","NameLab","p","_c2","ListLab","ul","_c3","TaskBlock","_c4","TaskButton","button","_c5","StudLaboratory","_s","labItems","setLabItems","isLoading","data","searchValue","setSearchValue","navigate","handleSearchChange","event","target","value","handleDeleteClick","index","updatedLabItems","splice","prev","timeout","setTimeout","clearTimeout","fetch","method","headers","then","response","ok","json","Error","tasksArray","Object","keys","map","key","id","description","tasks","catch","error","console","message","getColors","handleLabClick","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","lab","toLowerCase","includes","labItem","length","task","taskIndex","_c6","$RefreshReg$"],"sources":["C:/Users/polly/Online-laboratory-testing-system/sdo-react-main/sdo/src/pages/Laboratory/StudLaboratory.jsx"],"sourcesContent":["//     import { Link, useLocation } from \"react-router-dom\";\r\n//     import React, { useState, useEffect } from \"react\";\r\n//     import \"../../styles/style.css\";\r\n//     import styled from 'styled-components'\r\n\r\n//     const SectionLab = styled.div`\r\n//         display: flex;\r\n//         flex-direction: column;\r\n//         align-items: center;\r\n//         gap: 10px;\r\n//         padding: 25px 0px 20px;\r\n//         .section__lab-blockSearch{\r\n//         display: flex;\r\n//         gap: 10px;\r\n//         align-items: center;\r\n//         }\r\n//         .section__lab-input{\r\n//             width: 290px;\r\n//             height: 26px;\r\n//             padding: 10px;\r\n//             background: #F0F0F0;\r\n//             border-style: none;\r\n//             border-radius: 4px;\r\n//             font-size: 16px;\r\n//         }\r\n//         .section__lab-input:focus{\r\n//             outline-width: 0;\r\n//         }\r\n//         .section__lab-block{\r\n//             padding-left: 2%;\r\n//         }\r\n\r\n//         .section__lab-button{\r\n//             width: 285px;\r\n//             padding: 10px;\r\n//             border-radius: 4px;\r\n//             text-align: center;\r\n//             color: #000;\r\n//             font-family: 'Montserrat';\r\n//             line-height: 27px;\r\n//             text-decoration: none;\r\n//             background: #F0F0F0;\r\n//             border-style: none;\r\n//             border-radius: 4px;\r\n//             font-size: 10px;\r\n//         }\r\n//         .section__lab-btn{\r\n//             width: 280px;\r\n//             padding: 10px;\r\n//             font-size: 16px;\r\n//             text-align: center;\r\n//             color: #000;\r\n//             font-family: Montserrat;\r\n//             line-height: 27px;\r\n//             text-decoration: none;\r\n//             background: #F0F0F0;\r\n//             border-style: none;\r\n//             border-radius: 4px;\r\n//         }\r\n//         .section__lab-btn:hover{\r\n//             background: #D9D9D9;\r\n//             transition: 0.3s;\r\n//         }\r\n//         .section__lab-list {\r\n//             width: 1190px;\r\n//             length: 840px;\r\n//             padding: 40px;\r\n//             font-size: 18px;\r\n//             text-align: left;\r\n//             color: #000;\r\n//             font-family: Montserrat;\r\n//             text-decoration: none;\r\n//             background: #D8D8D861;\r\n//             border-radius: 7px;\r\n//             margin-top: 20px;\r\n//             display: block;\r\n//             border-style: none;\r\n//         }\r\n\r\n//         .section__lab-list-ready {\r\n//             width: 1190px;\r\n//             length: 840px;\r\n//             padding: 40px;\r\n//             font-size: 18px;\r\n//             text-align: left;\r\n//             color: #000;\r\n//             font-family: Montserrat;\r\n//             text-decoration: none;\r\n//             background: #E2EDD08C;\r\n//             border-radius: 7px;\r\n//             margin-top: 20px;\r\n//             display: block;\r\n//             border-style: none;\r\n//         }\r\n\r\n//         .section__lab-block {\r\n//             margin-bottom: 10px;\r\n//         }\r\n\r\n//         .alternate-color{\r\n//             background: rgba(216, 216, 216, 0.38);\r\n//         }   \r\n\r\n//     `\r\n// const NameLab = styled.p`\r\n//         color: #000;\r\n//         text-align: center;\r\n//         font-family: 'Montserrat';\r\n//         font-size: 19px;\r\n//         padding-left: 5%;\r\n// `\r\n//     const ListLab = styled.ul`\r\n//         display: flex;\r\n//         flex-direction: column;\r\n//         gap: 10px;\r\n//         .section__lab-number{\r\n//             width: 1246px;\r\n//             height: 120px;\r\n//             background: rgba(226, 237, 208, 0.55);\r\n//             border-radius: 10px;\r\n//             list-style: none;\r\n//             display: flex;\r\n//             align-items: center;\r\n//         }\r\n//         .list__link{\r\n//             text-decoration: none;\r\n//         }\r\n// `\r\n// const StudLaboratory = () => {\r\n//     const [labItems, setLabItems] = useState({ isLoading: true, data: [] });\r\n//     const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n//     const history = useLocation();\r\n\r\n//     const handleSearchChange = (event) => {\r\n//         setSearchValue(event.target.value);\r\n//     };\r\n\r\n//     const handleDeleteClick = (index) => {\r\n//         const updatedLabItems = [...labItems.data];\r\n//         updatedLabItems.splice(index, 1);\r\n//         setLabItems((prev) => ({ ...prev, data: updatedLabItems }));\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const timeout = setTimeout(() => {\r\n//             setLabItems((prev) => ({ ...prev, isLoading: false }));\r\n//         }, 5000);\r\n//         return () => {\r\n//             clearTimeout(timeout);\r\n//         };\r\n//     }, []);\r\n//         // useEffect(()=>{\r\n//         //     setLabItems(prev => ({\r\n//         //         ...prev,\r\n\r\n//         //     }))\r\n//         // },[])\r\n\r\n//         useEffect(() => {\r\n//             fetch('http://0.0.0.0:8002/tasks', {\r\n//               method: 'GET',\r\n//               headers: {\r\n//                 'accept': 'application/json'\r\n//               }\r\n//             })\r\n//             .then((response) => {\r\n//                 if (response.ok) {\r\n//                     return response.json();\r\n//                 } else {\r\n//                     throw new Error(\"Failed to fetch tasks\");\r\n//                 }\r\n//             })\r\n//             .then((data) => {\r\n//                 const tasksArray = Object.keys(data).map((key) => ({\r\n//                     id: key,\r\n//                     description: data[key],\r\n//                 }));\r\n//                 setLabItems({ isLoading: false, data: tasksArray });\r\n//             })\r\n//               .catch(error => {\r\n//                 console.error(error.message);\r\n//               });\r\n//           }, []);        \r\n    \r\n//         const getColors = (index) => {\r\n//             return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\"\r\n//         }; \r\n//         const handleLabClick = (id) => {\r\n//             history.push(`/labaStud/${id}`);\r\n//           };\r\n//         return (\r\n//                 <>\r\n//                     <SectionLab>\r\n//                         <div className=\"section__lab-block\">\r\n//                             <div className=\"section__lab-blockSearch\">\r\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n//                                 <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.8724 12.4554L17.8716 16.4602C18.0502 16.6589 18.0414 16.9631 17.8516 17.1511L17.1518 17.8519C17.0579 17.9467 16.9301 18 16.7968 18C16.6635 18 16.5358 17.9467 16.4419 17.8519L12.4427 13.8471C12.332 13.7362 12.2317 13.6156 12.1427 13.4867L11.3929 12.4855C10.1521 13.4776 8.61142 14.0178 7.02368 14.0173C3.7519 14.0287 0.908851 11.7686 0.177695 8.5751C-0.553461 5.38161 1.02241 2.10699 3.97235 0.689914C6.92229 -0.727158 10.459 0.0915124 12.4886 2.66125C14.5183 5.23099 14.4992 8.86596 12.4427 11.4142L13.4425 12.105C13.5986 12.2051 13.7428 12.3226 13.8724 12.4554ZM2.02472 7.00862C2.02472 9.77337 4.26288 12.0146 7.02378 12.0146C8.34962 12.0146 9.62115 11.4872 10.5587 10.5484C11.4962 9.6096 12.0228 8.3363 12.0228 7.00862C12.0228 4.24387 9.78469 2.00259 7.02378 2.00259C4.26288 2.00259 2.02472 4.24387 2.02472 7.00862Z\" fill=\"black\"/>\r\n//                                 </svg>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Поиск\"\r\n//                                     value={searchValue}\r\n//                                     onChange={handleSearchChange}\r\n//                                     className=\"section__lab-input\"\r\n//                                     />\r\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                                     Все лабораторные\r\n//                                 </Link>\r\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                                     Выполнено                            \r\n//                                 </Link>\r\n//                                 <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                                     Не выполнено\r\n//                                 </Link>\r\n//                             </div>\r\n                            \r\n//                             {/* Добавляем кнопку для \"Лабораторная №1\" */}\r\n//                             <Link to=\"/labaStud/1\" className=\"section__lab-list\">\r\n//                                 Лабораторная №1 “Создание программы с использованием классов”\r\n//                             </Link>\r\n//                             {/* Добавляем кнопку для \"Лабораторная №2\" */}\r\n//                             <Link to=\"/labaStud/2\" className=\"section__lab-list-ready\" >\r\n//                                 Лабораторная №2 “Создание программы с использованием классов”\r\n//                             </Link>\r\n//                         </div>\r\n//                         <ListLab>\r\n//                         {labItems.isLoading ? (\r\n//                     <p>Загрузка...</p>\r\n//                 ) : (\r\n//                     labItems.data.map((labTitle) => (\r\n//                         <Link className=\"list__link\" to={`/labaStud/${labTitle.id}`} key={labTitle.id}>\r\n//                         <li className={getColors()} onClick={() => handleLabClick(labTitle.id)}>\r\n//                             <NameLab>{labTitle.description}</NameLab>\r\n//                         </li>\r\n//                         </Link>\r\n//                     )).reverse()\r\n//                 )}\r\n//                         </ListLab>\r\n//                     </SectionLab>\r\n//                 </>\r\n//         );\r\n//     }\r\n\r\n// export default StudLaboratory;\r\n\r\n// import { Link, useNavigate } from \"react-router-dom\";  // useNavigate вместо useLocation\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"../../styles/style.css\";\r\n// import styled from 'styled-components';\r\n\r\n// const SectionLab = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     align-items: center;\r\n//     gap: 10px;\r\n//     padding: 25px 0px 20px;\r\n//     .section__lab-blockSearch {\r\n//         display: flex;\r\n//         gap: 10px;\r\n//         align-items: center;\r\n//     }\r\n//     .section__lab-input {\r\n//         width: 290px;\r\n//         height: 26px;\r\n//         padding: 10px;\r\n//         background: #F0F0F0;\r\n//         border-style: none;\r\n//         border-radius: 4px;\r\n//         font-size: 16px;\r\n//     }\r\n//     .section__lab-input:focus {\r\n//         outline-width: 0;\r\n//     }\r\n//     .section__lab-block {\r\n//         padding-left: 2%;\r\n//     }\r\n\r\n//     .section__lab-button {\r\n//         width: 285px;\r\n//         padding: 10px;\r\n//         border-radius: 4px;\r\n//         text-align: center;\r\n//         color: #000;\r\n//         font-family: 'Montserrat';\r\n//         line-height: 27px;\r\n//         text-decoration: none;\r\n//         background: #F0F0F0;\r\n//         border-style: none;\r\n//         border-radius: 4px;\r\n//         font-size: 10px;\r\n//     }\r\n//     .section__lab-btn {\r\n//         width: 280px;\r\n//         padding: 10px;\r\n//         font-size: 16px;\r\n//         text-align: center;\r\n//         color: #000;\r\n//         font-family: Montserrat;\r\n//         line-height: 27px;\r\n//         text-decoration: none;\r\n//         background: #F0F0F0;\r\n//         border-style: none;\r\n//         border-radius: 4px;\r\n//     }\r\n//     .section__lab-btn:hover {\r\n//         background: #D9D9D9;\r\n//         transition: 0.3s;\r\n//     }\r\n//     .section__lab-list {\r\n//         width: 1190px;\r\n//         padding: 40px;\r\n//         font-size: 18px;\r\n//         text-align: left;\r\n//         color: #000;\r\n//         font-family: Montserrat;\r\n//         background: #D8D8D861;\r\n//         border-radius: 7px;\r\n//         margin-top: 20px;\r\n//         display: block;\r\n//         border-style: none;\r\n//     }\r\n//     .section__lab-list-ready {\r\n//         width: 1190px;\r\n//         padding: 40px;\r\n//         font-size: 18px;\r\n//         text-align: left;\r\n//         color: #000;\r\n//         font-family: Montserrat;\r\n//         background: #E2EDD08C;\r\n//         border-radius: 7px;\r\n//         margin-top: 20px;\r\n//         display: block;\r\n//         border-style: none;\r\n//     }\r\n//     .section__lab-block {\r\n//         margin-bottom: 10px;\r\n//     }\r\n//     .alternate-color {\r\n//         background: rgba(216, 216, 216, 0.38);\r\n//     }\r\n// `;\r\n\r\n// const NameLab = styled.p`\r\n//     color: #000;\r\n//     text-align: center;\r\n//     font-family: 'Montserrat';\r\n//     font-size: 19px;\r\n//     padding-left: 5%;\r\n// `;\r\n\r\n// const ListLab = styled.ul`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     gap: 10px;\r\n//     .section__lab-number {\r\n//         width: 1246px;\r\n//         height: auto;\r\n//         background: rgba(226, 237, 208, 0.55);\r\n//         border-radius: 10px;\r\n//         list-style: none;\r\n//         display: flex;\r\n//         flex-direction: column;\r\n//         padding: 20px;\r\n//     }\r\n//     .list__link {\r\n//         text-decoration: none;\r\n//     }\r\n//     .task-block {\r\n//         display: flex;\r\n//         justify-content: space-between;\r\n//         padding: 5px 0;\r\n//     }\r\n//     .task-button {\r\n//         padding: 5px 10px;\r\n//         background-color: #D9D9D9;\r\n//         border: none;\r\n//         border-radius: 5px;\r\n//         cursor: pointer;\r\n//     }\r\n// `;\r\n\r\n// const StudLaboratory = () => {\r\n//     const [labItems, setLabItems] = useState({ isLoading: true, data: [] });\r\n//     const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n//     const navigate = useNavigate();  // заменяем useLocation на useNavigate\r\n\r\n//     const handleSearchChange = (event) => {\r\n//         setSearchValue(event.target.value);\r\n//     };\r\n\r\n//     const handleDeleteClick = (index) => {\r\n//         const updatedLabItems = [...labItems.data];\r\n//         updatedLabItems.splice(index, 1);\r\n//         setLabItems((prev) => ({ ...prev, data: updatedLabItems }));\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const timeout = setTimeout(() => {\r\n//             setLabItems((prev) => ({ ...prev, isLoading: false }));\r\n//         }, 5000);\r\n//         return () => {\r\n//             clearTimeout(timeout);\r\n//         };\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         fetch('http://0.0.0.0:8002/tasks', {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'accept': 'application/json'\r\n//             }\r\n//         })\r\n//             .then((response) => {\r\n//                 if (response.ok) {\r\n//                     return response.json();\r\n//                 } else {\r\n//                     throw new Error(\"Failed to fetch tasks\");\r\n//                 }\r\n//             })\r\n//             .then((data) => {\r\n//                 const tasksArray = Object.keys(data).map((key) => ({\r\n//                     id: key,\r\n//                     description: data[key].description,\r\n//                     tasks: data[key].tasks || []  // предполагаем, что задачи находятся в поле tasks\r\n//                 }));\r\n//                 setLabItems({ isLoading: false, data: tasksArray });\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error(error.message);\r\n//             });\r\n//     }, []);\r\n\r\n//     const getColors = (index) => {\r\n//         return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\";\r\n//     };\r\n\r\n//     const handleLabClick = (id) => {\r\n//         navigate(`/labaStud/${id}`);  // используем navigate для навигации\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <SectionLab>\r\n//                 <div className=\"section__lab-block\">\r\n//                     <div className=\"section__lab-blockSearch\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"Поиск\"\r\n//                             value={searchValue}\r\n//                             onChange={handleSearchChange}\r\n//                             className=\"section__lab-input\"\r\n//                         />\r\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                             Все лабораторные\r\n//                         </Link>\r\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                             Выполнено\r\n//                         </Link>\r\n//                         <Link id=\"buttonAdd\" className=\"section__lab-btn\">\r\n//                             Не выполнено\r\n//                         </Link>\r\n//                     </div>\r\n\r\n//                     {/* Лабораторная №1 */}\r\n//                     <div className=\"section__lab-list\">\r\n//                         <p>Лабораторная №1: “Создание программы с использованием классов”</p>\r\n//                         {/* Нет подзадач, одна кнопка */}\r\n//                         <button onClick={() => handleLabClick(1)} className=\"task-button\">Перейти</button>\r\n//                     </div>\r\n\r\n//                     {/* Лабораторная №2 */}\r\n//                     <div className=\"section__lab-list-ready\">\r\n//                         <p>Лабораторная №2: “Создание программы с использованием классов”</p>\r\n//                         {/* Есть подзадачи */}\r\n//                         <div className=\"task-block\">\r\n//                             <span>Задача 1: Создать класс</span>\r\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\r\n//                         </div>\r\n//                         <div className=\"task-block\">\r\n//                             <span>Задача 2: Написать методы</span>\r\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\r\n//                         </div>\r\n//                         <div className=\"task-block\">\r\n//                             <span>Задача 3: Протестировать код</span>\r\n//                             <button onClick={() => handleLabClick('2')} className=\"task-button\">Перейти</button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <ListLab>\r\n//                     {labItems.isLoading ? (\r\n//                         <p>Загрузка...</p>\r\n//                     ) : (\r\n//                         labItems.data\r\n//                             .filter(lab => lab.description.toLowerCase().includes(searchValue.toLowerCase()))\r\n//                             .map((labItem, index) => (\r\n//                                 <li className={getColors(index)} key={labItem.id}>\r\n//                                     <NameLab>{labItem.description}</NameLab>\r\n//                                     {labItem.tasks.length > 0 ? (\r\n//                                         labItem.tasks.map((task, taskIndex) => (\r\n//                                             <div className=\"task-block\" key={taskIndex}>\r\n//                                                 <span>{`Задача ${taskIndex + 1}: ${task}`}</span>\r\n//                                                 <button\r\n//                                                     className=\"task-button\"\r\n//                                                     onClick={() => handleLabClick(`${labItem.id}/task${taskIndex + 1}`)}\r\n//                                                 >\r\n//                                                     Перейти\r\n//                                                 </button>\r\n//                                             </div>\r\n//                                         ))\r\n//                                     ) : (\r\n//                                         <button\r\n//                                             className=\"task-button\"\r\n//                                             onClick={() => handleLabClick(labItem.id)}\r\n//                                         >\r\n//                                             Перейти\r\n//                                         </button>\r\n//                                     )}\r\n//                                 </li>\r\n//                             ))\r\n//                     )}\r\n//                 </ListLab>\r\n//             </SectionLab>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default StudLaboratory;\r\n\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";  \r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/style.css\";\r\nimport styled from 'styled-components';\r\n\r\nconst SectionLab = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 25px 0px 20px;\r\n    \r\n    .section__lab-blockSearch {\r\n        display: flex;\r\n        gap: 10px;\r\n        align-items: center;\r\n    }\r\n\r\n    .section__lab-input {\r\n        width: 290px;\r\n        height: 26px;\r\n        padding: 10px;\r\n        background: #F0F0F0;\r\n        border: none;\r\n        border-radius: 4px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .section__lab-input:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .section__lab-button {\r\n        width: 285px;\r\n        padding: 10px;\r\n        border-radius: 4px;\r\n        text-align: center;\r\n        color: #000;\r\n        font-family: 'Montserrat';\r\n        line-height: 27px;\r\n        text-decoration: none;\r\n        background: #F0F0F0;\r\n        border: none;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .section__lab-btn {\r\n        width: 280px;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        text-align: center;\r\n        color: #000;\r\n        font-family: Montserrat;\r\n        line-height: 27px;\r\n        text-decoration: none;\r\n        background: #F0F0F0;\r\n        border: none;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .section__lab-btn:hover {\r\n        background: #D9D9D9;\r\n        transition: 0.3s;\r\n    }\r\n\r\n    .section__lab-list {\r\n        width: 1190px;\r\n        padding: 40px;\r\n        font-size: 18px;\r\n        text-align: left;\r\n        color: #000;\r\n        font-family: Montserrat;\r\n        background: #D8D8D861;\r\n        border-radius: 7px;\r\n        margin-top: 20px;\r\n        display: block;\r\n        border: none;\r\n    }\r\n\r\n    .section__lab-list-ready {\r\n        width: 1190px;\r\n        padding: 40px;\r\n        font-size: 18px;\r\n        text-align: left;\r\n        color: #000;\r\n        font-family: Montserrat;\r\n        background: #E6F4CF;\r\n        border-radius: 7px;\r\n        display: block;\r\n        border: none;\r\n    }\r\n\r\n    .alternate-color {\r\n        background: rgba(216, 216, 216, 0.38);\r\n    }\r\n`;\r\n\r\nconst NameLab = styled.p`\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: 'Montserrat';\r\n    font-size: 19px;\r\n    padding-left: 5%;\r\n`;\r\n\r\nconst ListLab = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n`;\r\n\r\nconst TaskBlock = styled.div`\r\n    width: 100%;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst TaskButton = styled.button`\r\n    padding: 5px 10px;\r\n    background-color: #D9D9D9;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: #C0C0C0;\r\n    }\r\n`;\r\n\r\nconst StudLaboratory = () => {\r\n    const [labItems, setLabItems] = useState({ isLoading: true, data: [] });\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    const handleDeleteClick = (index) => {\r\n        const updatedLabItems = [...labItems.data];\r\n        updatedLabItems.splice(index, 1);\r\n        setLabItems((prev) => ({ ...prev, data: updatedLabItems }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setLabItems((prev) => ({ ...prev, isLoading: false }));\r\n        }, 5000);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('http://0.0.0.0:8002/tasks', {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error(\"Failed to fetch tasks\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                const tasksArray = Object.keys(data).map((key) => ({\r\n                    id: key,\r\n                    description: data[key].description,\r\n                    tasks: data[key].tasks || [] \r\n                }));\r\n                setLabItems({ isLoading: false, data: tasksArray });\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }, []);\r\n\r\n    const getColors = (index) => {\r\n        return index % 2 === 0 ? \"section__lab-number\" : \"section__lab-number alternate-color\";\r\n    };\r\n\r\n    const handleLabClick = (id) => {\r\n        navigate(`/labaStud/${id}`);  \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SectionLab>\r\n                <div className=\"section__lab-block\">\r\n                    <div className=\"section__lab-blockSearch\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Поиск\"\r\n                            value={searchValue}\r\n                            onChange={handleSearchChange}\r\n                            className=\"section__lab-input\"\r\n                        />\r\n                        <Link id=\"buttonAdd\" className=\"section__lab-btn\">Все лабораторные</Link>\r\n                        <Link id=\"buttonAdd\" className=\"section__lab-btn\">Выполнено</Link>\r\n                        <Link id=\"buttonAdd\" className=\"section__lab-btn\">Не выполнено</Link>\r\n                    </div>\r\n\r\n                    {/* Лабораторная №1 */}\r\n                    <div className=\"section__lab-list\">\r\n                        Лабораторная №1: “Создание программы с использованием классов”\r\n                        <button onClick={() => handleLabClick(1)} className=\"task-button\">Перейти</button>\r\n                    </div>\r\n\r\n                    {/* Лабораторная №2 */}\r\n                    <div className=\"section__lab-list-ready\">\r\n                        Лабораторная №2: “Создание программы с использованием классов”\r\n                        {/* Task Blocks for Laboratory №2 */}\r\n                        <TaskBlock>\r\n                            <span>Задача 1: Создать класс</span>\r\n                            <TaskButton onClick={() => handleLabClick('2')}>Перейти</TaskButton>\r\n                        </TaskBlock>\r\n                        <TaskBlock>\r\n                            <span>Задача 2: Написать методы</span>\r\n                            <TaskButton onClick={() => handleLabClick('2')}>Перейти</TaskButton>\r\n                        </TaskBlock>\r\n                        <TaskBlock>\r\n                            <span>Задача 3: Протестировать код</span>\r\n                            <TaskButton onClick={() => handleLabClick('2')}>Перейти</TaskButton>\r\n                        </TaskBlock>\r\n                    </div>\r\n                </div>\r\n\r\n                <ListLab>\r\n                    {labItems.isLoading ? (\r\n                        <p>Загрузка...</p>\r\n                    ) : (\r\n                        labItems.data\r\n                            .filter(lab => lab.description.toLowerCase().includes(searchValue.toLowerCase()))\r\n                            .map((labItem, index) => (\r\n                                <li className={getColors(index)} key={labItem.id}>\r\n                                    <NameLab>{labItem.description}</NameLab>\r\n                                    {labItem.tasks.length > 0 ? (\r\n                                        labItem.tasks.map((task, taskIndex) => (\r\n                                            <TaskBlock key={taskIndex}>\r\n                                                <span>{`Задача ${taskIndex + 1}: ${task}`}</span>\r\n                                                <TaskButton onClick={() => handleLabClick(`${labItem.id}/task${taskIndex + 1}`)}>\r\n                                                    Перейти\r\n                                                </TaskButton>\r\n                                            </TaskBlock>\r\n                                        ))\r\n                                    ) : (\r\n                                        <TaskButton onClick={() => handleLabClick(labItem.id)}>\r\n                                            Перейти\r\n                                        </TaskButton>\r\n                                    )}\r\n                                </li>\r\n                            ))\r\n                    )}\r\n                </ListLab>\r\n            </SectionLab>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudLaboratory;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}